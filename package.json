{
  "name": "@pojntfx/unisockets",
  "version": "0.0.12",
  "description": "A universal Berkeley sockets implementation for both WebAssembly (based on WebRTC) and native platforms with bindings for C, Go and TinyGo.",
  "main": "dist/nodeLib/index.js",
  "module": "dist/webLib/index.mjs",
  "types": "dist/index.d.ts",
  "scripts": {
    "build": "rm -rf dist && yarn build:types && yarn build:lib:node && yarn build:lib:web && yarn build:app:node && yarn build:app:web && yarn build:diagram && yarn build:docs",
    "build:types": "parcel build --target types index.ts",
    "build:lib:node": "parcel build --target nodeLib index.ts",
    "build:lib:web": "parcel build --target webLib index.ts",
    "build:app:node": "parcel build --target nodeApp cmd/unisockets_runner/main.ts && chmod +x dist/nodeApp/main.js",
    "build:app:web": "mkdir -p dist/webApp && cp -r out dist/webApp && parcel build --target webApp cmd/unisockets_runner_web/index.html",
    "build:diagram": "mkdir -p dist/media && tplant -p tsconfig.json -i 'pkg/**/*.ts*' --output 'dist/media/diagram.svg'",
    "build:docs": "mkdir -p dist/docs && typedoc --tsconfig tsconfig.json --mode file --outDir dist/docs --out dist/docs --media dist/media --exclude '+(node_modules|dist)' .",
    "test": "jest",
    "dev:app:node:signaling-server": "LOG_LEVEL=debug DEBUG='' ts-node-dev --files cmd/unisockets_runner/main.ts --runSignalingServer true",
    "dev:app:node:example-server": "LOG_LEVEL=debug DEBUG='' ts-node-dev --files cmd/unisockets_runner/main.ts --runBinary true --useC true --useWASI true --binaryPath out/c/echo_server.wasm",
    "dev:app:node:example-client": "LOG_LEVEL=debug DEBUG='' ts-node-dev --files cmd/unisockets_runner/main.ts --runBinary true --useC true --useWASI true --binaryPath out/c/echo_client.wasm",
    "dev:app:web": "mkdir -p dist/webApp && cp -r out dist/webApp && parcel --hmr-port 1235 --target webApp cmd/unisockets_runner_web/index.html",
    "start:app:node:signaling-server": "./dist/nodeApp/main.js --runSignalingServer true",
    "start:app:node:example-server": "./dist/nodeApp/main.js --runBinary true --useC true --useWASI true --binaryPath out/c/echo_server.wasm",
    "start:app:node:example-client": "./dist/nodeApp/main.js --runBinary true --useC true --useWASI true --binaryPath out/c/echo_client.wasm",
    "start:app:web": "serve dist/webApp",
    "start:docs": "serve dist/docs"
  },
  "bin": {
    "unisockets_runner": "dist/nodeApp/main.js"
  },
  "files": [
    "dist"
  ],
  "repository": {
    "type": "git",
    "url": "git+https://github.com/pojntfx/unisockets.git"
  },
  "author": "Felicitas Pojtinger <felicitas@pojtinger.com>",
  "license": "AGPL-3.0",
  "bugs": {
    "url": "https://github.com/pojntfx/unisockets/issues"
  },
  "homepage": "https://github.com/pojntfx/unisockets#readme",
  "devDependencies": {
    "@types/jest": "^26.0.16",
    "@types/uuid": "^8.3.0",
    "@types/ws": "^7.4.0",
    "@types/yargs": "^15.0.9",
    "get-port": "^5.1.1",
    "jest": "^26.6.3",
    "tplant": "^2.3.6",
    "ts-jest": "^26.4.4",
    "ts-node-dev": "^1.0.0",
    "typedoc": "^0.19.2",
    "typescript": "^4.0.5"
  },
  "dependencies": {
    "@wasmer/wasi": "^0.12.0",
    "@wasmer/wasm-transformer": "^0.12.0",
    "@wasmer/wasmfs": "^0.12.0",
    "async-mutex": "^0.2.6",
    "asyncify-wasm": "^1.1.1",
    "emittery": "^0.7.2",
    "isomorphic-ws": "^4.0.1",
    "serve": "^11.3.2",
    "uuid": "^8.3.1",
    "winston": "^3.3.3",
    "wrtc": "^0.4.6",
    "ws": "^7.4.0",
    "yargs": "^16.1.0"
  },
  "targets": {
    "nodeLib": {
      "isLibrary": true,
      "context": "node",
      "includeNodeModules": {
        "wrtc": false
      },
      "engines": {
        "node": ">=12.x"
      }
    },
    "webLib": {
      "isLibrary": true,
      "context": "browser",
      "engines": {
        "browsers": ">=5%"
      }
    },
    "nodeApp": {
      "engines": {
        "node": ">=12.x"
      }
    },
    "webApp": {
      "engines": {
        "browsers": ">=5%"
      }
    }
  },
  "jest": {
    "rootDir": "pkg",
    "preset": "ts-jest",
    "testMatch": [
      "<rootDir>/**/*.test.ts"
    ],
    "coverageThreshold": {
      "global": {
        "branches": 0,
        "functions": 0,
        "lines": 0,
        "statements": 0
      }
    }
  }
}
