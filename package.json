{
  "name": "@pojntfx/unisockets",
  "version": "0.0.11",
  "description": "A universal Berkeley sockets implementation for both WebAssembly (based on WebRTC) and native platforms with bindings for C, Go and TinyGo.",
  "main": "dist/index.js",
  "module": "dist/index.mjs",
  "typings": "dist/index.d.ts",
  "scripts": {
    "build": "yarn build:lib && yarn build:bin && yarn build:web && yarn build:docs && yarn build:diagram",
    "build:lib": "rollup -c",
    "build:bin": "esbuild cmd/unisockets_runner/main.ts --bundle --minify --outfile=dist/main.js --platform=node --target=node12 --external:wasi --external:wrtc --external:@wasmer/wasm-transformer",
    "build:web": "parcel build --out-dir browser ./cmd/unisockets_runner_web/index.html",
    "build:docs": "mkdir -p docs && typedoc --tsconfig tsconfig.json --mode file --outDir docs --media docs/media --exclude '+(node_modules|docs|out|dist|browser|vendor)' .",
    "build:diagram": "mkdir -p docs/media && tplant -p tsconfig.json -i './**/*.ts*' --output 'docs/media/diagram.svg'",
    "test": "jest",
    "dev:signaling-server": "LOG_LEVEL=debug DEBUG='' ts-node-dev --files cmd/unisockets_runner/main.ts --runSignalingServer true",
    "dev:example-server": "LOG_LEVEL=debug DEBUG='' ts-node-dev --files cmd/unisockets_runner/main.ts --runBinary true --useC true --useWASI true --binaryPath out/c/echo_server.wasm",
    "dev:example-client": "LOG_LEVEL=debug DEBUG='' ts-node-dev --files cmd/unisockets_runner/main.ts --runBinary true --useC true --useWASI true --binaryPath out/c/echo_client.wasm",
    "dev:web": "parcel --hmr-port 1235 --out-dir browser ./cmd/unisockets_runner_web/index.html",
    "start:signaling-server": "./dist/main.js --runSignalingServer true",
    "start:example-server": "./dist/main.js --runBinary true --useC true --useWASI true --binaryPath out/c/echo_server.wasm",
    "start:example-client": "./dist/main.js --runBinary true --useC true --useWASI true --binaryPath out/c/echo_client.wasm",
    "start:web": "serve browser"
  },
  "bin": {
    "unisockets_runner": "dist/main.js"
  },
  "files": [
    "dist"
  ],
  "repository": {
    "type": "git",
    "url": "git+https://github.com/pojntfx/unisockets.git"
  },
  "author": "Felicitas Pojtinger <felicitas@pojtinger.com>",
  "license": "AGPL-3.0",
  "bugs": {
    "url": "https://github.com/pojntfx/unisockets/issues"
  },
  "homepage": "https://github.com/pojntfx/unisockets#readme",
  "devDependencies": {
    "@types/jest": "^26.0.16",
    "@types/uuid": "^8.3.0",
    "@types/ws": "^7.4.0",
    "@types/yargs": "^15.0.9",
    "esbuild": "^0.8.20",
    "get-port": "^5.1.1",
    "jest": "^26.6.3",
    "parcel-bundler": "^1.12.4",
    "parcel-plugin-static-files-copy": "^2.5.0",
    "rollup": "^2.34.2",
    "rollup-plugin-dts": "^2.0.0",
    "rollup-plugin-esbuild": "^2.6.0",
    "tplant": "^2.3.6",
    "ts-jest": "^26.4.4",
    "ts-node": "^9.0.0",
    "ts-node-dev": "^1.0.0",
    "tslib": "^2.0.3",
    "typedoc": "^0.19.2",
    "typescript": "^4.0.5"
  },
  "dependencies": {
    "@wasmer/wasi": "^0.12.0",
    "@wasmer/wasm-transformer": "^0.12.0",
    "@wasmer/wasmfs": "^0.12.0",
    "async-mutex": "^0.2.6",
    "asyncify-wasm": "^1.1.1",
    "emittery": "^0.7.2",
    "isomorphic-ws": "^4.0.1",
    "serve": "^11.3.2",
    "uuid": "^8.3.1",
    "winston": "^3.3.3",
    "wrtc": "^0.4.6",
    "ws": "^7.4.0",
    "yargs": "^16.1.0"
  },
  "browserslist": [
    "last 1 Chrome version"
  ],
  "staticFiles": {
    "staticPath": "out",
    "watcherGlob": "**"
  }
}
