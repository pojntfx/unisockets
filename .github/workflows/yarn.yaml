name: Yarn CI

on: [push, pull_request]

jobs:
  yarn:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2
      - name: Setup node
        uses: actions/setup-node@v2-beta
        with:
          node-version: "14"
          registry-url: "https://registry.npmjs.org"
      - name: Install dependencies with Yarn
        run: yarn
      - name: Build with make
        run: make -j$(nproc)
      - name: Build with Yarn
        run: yarn build
      - name: Install node-plantuml
        run: npm install -g node-plantuml
      - name: Build docs with Yarn
        run: yarn build:diagram && yarn build:protocol && yarn build:docs
      - name: Test with Yarn
        run: yarn test
      - name: Publish to npm
        if: ${{ github.ref == 'refs/heads/main' }}
        uses: pascalgn/npm-publish-action@1.3.5
        with:
          publish_command: "yarn"
          commit_pattern: '.*\:\ Release (\S+)'
          publish_args: "--access public"
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          NPM_AUTH_TOKEN: ${{ secrets.NPM_AUTH_TOKEN }}
      - name: Publish to GitHub pages
        if: ${{ github.ref == 'refs/heads/main' }}
        uses: JamesIves/github-pages-deploy-action@3.7.1
        with:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          BRANCH: gh-pages
          FOLDER: dist/docs
          CLEAN: true
      - uses: jsmrcaga/action-netlify-deploy@master
        if: ${{ github.ref == 'refs/heads/main' }}
        with:
          NETLIFY_AUTH_TOKEN: ${{ secrets.NETLIFY_AUTH_TOKEN }}
          NETLIFY_SITE_ID: ${{ secrets.NETLIFY_SITE_ID }}
          NETLIFY_DEPLOY_TO_PROD: true
          build_directory: "dist/webApp"
          install_command: "echo 0"
          build_command: "echo 0"
      - uses: jsmrcaga/action-netlify-deploy@master
        if: ${{ github.ref == 'refs/heads/main' != true }}
        with:
          NETLIFY_AUTH_TOKEN: ${{ secrets.NETLIFY_AUTH_TOKEN }}
          NETLIFY_SITE_ID: ${{ secrets.NETLIFY_SITE_ID }}
          build_directory: "dist/webApp"
          install_command: "echo 0"
          build_command: "echo 0"
